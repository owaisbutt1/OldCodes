
.container{
    background-color: #eee;
    width:720px;
    height:auto;
    /* height:700px; */
    margin:50px 0px 0px 20px;
    /* from yahoo baba grid playlist */
    display:grid;
    /* we use units together %,fr,px,auto  */
    /* we use fr in points  */
    /* we use percentage % also auto  /// also use fr means fraction/// */  
    /* if we need two coulmn with same width we use repeat property of grid css in (in which frst we give value of columns then unit or means px or fr or %) after this bracket if we need more column then we put direct value of it means %/fr/px  we put these value also before repeat if we need column  before repeat */
   grid-template-columns: /*this is for grid-gap the first value only */ repeat(3,[col-start] 1fr [col-end])           /*30% repeat(2,160px) 1fr */          /* 50%  120px 120px  Auto */  /* 1fr 3fr 1fr */ ;
    /* if we need two rows with same width we use repeat property of grid cssin (in which frst we give value of row then unit or means px) after this bracket if we need more row then we put direct value of it means %/fr/px  we put these value also before repeat if we need column  before repeat */
       grid-template-rows:/*100px 100px 200px  */   /* repeat*(2,1fr)*/   /* 1fr 200px */  /* this is for grid-gap*/ [header-start] 120px [header-end menu-start] 60px [menu-end box-start] 100px [box-end content-start] 400px [content-end footer-start] 50px [footer-end];
    /* grid-gap:20px 20px; this is shorthand */
    /* grid-row-gap: 20px; */
    /* grid-column-gap: 20px; */
    /* we can ALSO wrirte it in one value  */
    grid-gap: 5px;
}

.header{  
    background-color:yellowgreen;
    /* grid positioning  itemsw */
    grid-row-start:header-start;
    grid-row-end:header-end;
    grid-column-start: col-start 1;
    grid-column-end: col-end 3;
    z-index:1;
}
.menu{
    background-color:orangered;
    grid-row:menu-start/menu-end;
    /* grid-column:1/3; */
    /* here we use span to take columns  its examples r below we can use span in row also we r going to use span in item 3 ;  tip: we need space between span and value which we put */
    /* grid-column:1/ span 2; */
     /* grid-column:1/ span 3; */
 grid-column:col-start 1/ col-end 3  /*span 3 */; 
}
.box1{
    background-color:slateblue;
    grid-row:box-start/box-end;/*  means row 2 to row 4 */
    grid-column:col-start 1/col-end 1 ;

}
.box2{
    background-color:royalblue;
    /* grid-row-start: 2; */
    /* grid-row-end:3; */
    /* short hand of grid row is grid-row  and this is below*/
     grid-row:box-start/box-end;
     /* short hand of grid column is grid-row  and this is below*/
     /* grid-column:2/3; */
    /* grid-column-start: 2; */
    /* grid-column-end: 3; */
    /* grid area is the short hand of grid row and  grid column */
    /* grid-area:2/2/3/3; */

    grid-column:col-start 2/col-end 2 ;
}
.sidebar{
    background-color:goldenrod;
    grid-row:box-start/content-end;
    grid-column:col-start 3/col-end 3 ;
}
.content {
    background-color:hotpink;
    grid-row:content-start/content-end;
    /* grid-column:1/3; */
    grid-column:col-start 1/col-end 2 ;
}
.footer{
grid-row:footer-start/footer-end;
grid-column:col-start 1/col-end 3;
/* grid-column:1/-1; */
background-color: yellow;
}



.container1{
    background-color: #eee;
    width:700px;
    margin:50px 0px 30px 20px;
    display:grid;
    grid-template-columns:repeat(2,1fr);
    grid-template-rows:120px 120px;
    grid-gap:10px;
    grid-auto-rows:50px;
    /* when we use grid-auto-flow for make coulmn implicit then we use grid-flow-column to give value of grid-column  */
    /* grid-auto-flow: column; */
    /* grid-auto-columns: .5fr; */


    /* align-items:center; */
    /* align-items:start; */
    /* align-items:end; */
    /* align-items:stretch; */


    /* justify-items: start; */
    /* justify-items: center; */
    /* justify-items: end; */
    /* justify-items: stretch; */

    /* short hand of align and justify is place items  */
    /* place-items:center center; */
    /* place-items:end end; */
}

.one{  
    background-color:yellowgreen;
  
}
.two{
    background-color:orangered;
    /* align-self:center; */
    /* justify-self: end; */
    /* short hand of align and justify is place self 
    place-self: center end; */

  
}
.three{
    background-color:slateblue;
    grid-row:2/span 3;
   
}
.four{
    background-color:royalblue;
 
}
.five{
    background-color: darkseagreen;
}
.six{
    background-color:goldenrod;
   
}
.seven {
    background-color:hotpink;
  grid-column: 1/span 2;
}
.eight{
background-color: yellow;
}


/* difference  between justify-content and justify items are content used for whole div but items use for  only items */



.container2 {
    background-color: #eee;
    width:700px;
    height:700px;
    margin:4px auto 0;

    display:grid;
    grid-template-columns:repeat(2,100px);
    grid-template-rows:100px 100px;
    grid-gap:15px;
    grid-auto-rows:50px;
    grid-auto-flow:row dense;

    /* justify is  use for horizental alignment */
    justify-content: center;
    /* justify-content: space-between; */
    /* justify-content: space-between; */
    justify-content: space-evenly;

    /* using align-contents align is use for vertical alignment */
    /* align-content: center; */
    /* align-content: start; */
    /* align-content: end; */
    /* align-content: stretch; */
    /* align-content: center; */
    align-content: space-evenly;
    /* align-content: space-around; */
    /* align-content: space-between; */

}
.skype{
    background-color:yellowgreen;
}
.fb{
    background-color:orangered;
 

}
.insta{
    background-color:slateblue;
    grid-row:2/span 3;
   
}
.viber{
    background-color:royalblue;
}
.tweeter{
    background-color: darkseagreen;
}
.youtube{
    background-color:goldenrod;
    grid-column:1/span 2;
}
.vidmate{
    background-color:hotpink;
    grid-column: 1/span 2;
}
.whatsapp{
    background-color: yellow;
}